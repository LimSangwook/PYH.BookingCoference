<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="RESERVE">
	
    <typeAlias alias="reserve" type="com.module.reserve.dto.ReserveDto"/>
    
    <sql id="reserveColumn">
    	RESERVATION_KEY
    ,	MEETINGROOM_KEY
    ,	RESERVATION_DATE
    ,	RESERVATION_BEGIN_TIME
    ,	RESERVATION_END_TIME
    ,	RESERVATION_PWD
   	,	NAME
   	,	FIRM_NAME
 	,   STATUS
 	,   STATUS_TIME
   	,	PHONE_NUMBER_1
   	,	PHONE_NUMBER_2
   	,	PHONE_NUMBER_3
   	,	EMAIL_ADDR		
   	,	REQUEST		
   	,	AGREE_TERM_PERSONAL_INFO
   	,	REG_TIME
   	,	MOD_TIME
   	, 	CALCEL_TIME
    </sql>

	<select id="getMeetingroomStatusList" resultClass="reserve">
	/* RESERVE.getMeetingroomStatusList */
	
	SELECT MI.MEETINGROOM_KEY
		 , MI.NAME MEETINGROOM_NAME
		 , IFNULL(AVAIL.AVAILABILITY, "1") ROOM_AVAILABILITY
	FROM MEETINGROOM_INFO AS MI
	LEFT OUTER JOIN (SELECT CASE WHEN COUNT(MEETINGROOM_KEY) > 10 THEN '0' ELSE '1' END AVAILABILITY
					  	  , MEETINGROOM_KEY
					 FROM RESERVATION_MAPP
					 WHERE RESERVATION_DATE = #reservation_date#
					 GROUP BY MEETINGROOM_KEY, RESERVATION_DATE) AVAIL ON AVAIL.MEETINGROOM_KEY = MI.MEETINGROOM_KEY
	WHERE MI.STATUS ='Y'
	ORDER BY MEETINGROOM_KEY
	</select>


	<select id="getDateList" resultClass="reserve">
	/* RESERVE.getDateList */
	
	SELECT MONTH_LIST.DATES AS RESERVATION_DATE
		 , DATE_FORMAT(MONTH_LIST.DATES, '%Y') AS RESERVATION_YEAR
	 	 , DATE_FORMAT(MONTH_LIST.DATES, '%m') AS RESERVATION_MONTH
	  	 , DATE_FORMAT(MONTH_LIST.DATES, '%d') AS RESERVATION_DAY
	  	 , CASE DAYOFWEEK(MONTH_LIST.DATES)
				WHEN 1 THEN '(일)'
  	 	  	 	WHEN 2 THEN '(월)'
  	 	  	 	WHEN 3 THEN '(화)'
  	 	  	 	WHEN 4 THEN '(수)'
  	 	  	 	WHEN 5 THEN '(목)'
  	 	  	 	WHEN 6 THEN '(금)'
  	 	  	 	WHEN 7 THEN '(토)'
  	 	  	 	END RESERVATION_DAYOFWEEK
		 , IFNULL(AVAIL.AVAILABILITY, "1") DATE_AVAILABILITY
		 , CASE WHEN #reservation_date# = MONTH_LIST.DATES THEN '1'
		 	    ELSE '0' END SELECTED_DATE
	FROM
	(SELECT ADDDATE(IFNULL(DATE_FORMAT(DATE(#reservation_date#), '%Y-%m-01'), DATE_FORMAT(NOW() ,'%Y-%m-01')), T3.I*1000 + T2.I*100 + T1.I*10 + T0.I) DATES
	 FROM (SELECT 0 I UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) T0,
	      (SELECT 0 I UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) T1,
	      (SELECT 0 I UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) T2,
	      (SELECT 0 I UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) T3) MONTH_LIST
	 LEFT OUTER JOIN
	(SELECT CASE WHEN COUNT(MEETINGROOM_KEY) > 10 THEN '0' ELSE '1' END AVAILABILITY
		  , MEETINGROOM_KEY
		  , RESERVATION_DATE
			FROM RESERVATION_MAPP
			WHERE MEETINGROOM_KEY = #meetingroom_key#
			GROUP BY MEETINGROOM_KEY, RESERVATION_DATE) AVAIL ON AVAIL.RESERVATION_DATE = MONTH_LIST.DATES
	 WHERE MONTH_LIST.DATES BETWEEN IFNULL(DATE_FORMAT(DATE(#reservation_date#), '%Y-%m-0'), DATE_FORMAT(NOW() ,'%Y-%m-01')) AND IFNULL(DATE_FORMAT(DATE(#reservation_date#), '%Y-%m-32'), DATE_FORMAT(NOW() ,'%Y-%m-32'))
	 ORDER BY MONTH_LIST.DATES
	</select>
 
	<select id="getTimeList" resultClass="reserve">
	/* RESERVE.getTimeList */
	
	SELECT TIME_LIST.RESERVATION_TIME
	     , TIME_LIST.RESERVATION_TERM
		 , CASE WHEN AVAIL.RESERVATION_TIME THEN '0' ELSE '1' END TIME_AVAILABILITY
	FROM (SELECT LPAD(T.I, 2, '0') RESERVATION_TIME
		  	   , CONCAT_WS("", LPAD(T.I, 2, '0'),":00","~",LPAD(T.I+1, 2, '0'),":00") RESERVATION_TERM
	 	  FROM (SELECT 8 I UNION SELECT 9 UNION SELECT 10 UNION SELECT 11 UNION SELECT 12 UNION SELECT 13 UNION SELECT 14 UNION SELECT 15 UNION SELECT 16 UNION SELECT 17 UNION SELECT 18) T) TIME_LIST
	 LEFT OUTER JOIN (SELECT RESERVATION_TIME
					  FROM RESERVATION_MAPP
					  WHERE RESERVATION_DATE = #reservation_date#
					  AND   MEETINGROOM_KEY = #meetingroom_key#
					  AND   (STATUS = 'W' OR STATUS = 'A')) AVAIL ON AVAIL.RESERVATION_TIME = TIME_LIST.RESERVATION_TIME
	 ORDER BY TIME_LIST.RESERVATION_TIME			
	
	</select>
 
	<select id="getReserveRoomInfo" resultClass="reserve">
	/* RESERVE.getReserveRoomInfo */
		
	SELECT NAME
	     , HOURLY_PRICE
	FROM MEETINGROOM_INFO
	WHERE MEETINGROOM_KEY = #reservation_date#
	AND   STATUS = 'Y'
	
	</select>
    
    <insert id="reserveSaveInfo">
    /* RESERVE.reserveSaveInfo */
    
    INSERT INTO RESERVATION_INFO(
    	RESERVATION_PWD
    ,	NAME
    ,	FIRM_NAME
    ,	PHONE_NUMBER_1
   	,	PHONE_NUMBER_2
   	,	PHONE_NUMBER_3
   	,	EMAIL_ADDR_1
   	,	EMAIL_ADDR_2
   	,	EMAIL_ADDR_3		
   	,	REQUEST
   	,	AGREE_TERM_PERSONAL_INFO
   	,	TOTAL_PRICE
   	,   TOTAL_TIMES
   	,   STATUS
   	,   STATUS_TIME
    ) VALUES (
    	#reservation_pwd#          
    ,	#name#                     
    ,	#firm_name#                
    ,	#phone_number_1#           
    ,	#phone_number_2#           
    ,	#phone_number_3#           
    ,	#email_addr_1#             
    ,	#email_addr_2#             
    ,	#email_addr_3#		     
    ,   #request#                  
    ,   #agree_term_personal_info# 
    ,   #total_price#
    ,   #total_times#       
    ,   'W'    
    ,   NOW()      
    )
    
	   	<selectKey resultClass="int" >
		SELECT @@IDENTITY AS RESERVATION_KEY
		</selectKey>
    </insert>
    
    <insert id="reserveSaveMapp">
    /* RESERVE.reserveSaveMapp */
    
    INSERT INTO RESERVATION_MAPP(
    	RESERVATION_KEY
    ,	MEETINGROOM_KEY
    ,	RESERVATION_DATE
    ,	RESERVATION_TIME
   	,	STATUS
   	,	REG_TIME
    ) VALUES (
    	#reservation_key#          
    ,	#meetingroom_key#                     
    ,	#reservation_date#                
    ,	#reservation_time#           
    ,	'W'
    ,   now()           
    )
    
    </insert>
    
   
	<select id="getReservationResult" resultClass="reserve">
	/* RESERVE.getReservationResult */
	
	SELECT RI.RESERVATION_KEY
	     , RI.NAME
	     , RI.FIRM_NAME
	     , RI.PHONE_NUMBER_1
	     , RI.PHONE_NUMBER_2
	     , RI.PHONE_NUMBER_3
	     , RI.EMAIL_ADDR_1
	  	 , RI.REQUEST
	  	 , RI.STATUS
	  	 , CASE RI.STATUS WHEN 'A' THEN '승인'
	  	 	           WHEN 'W' THEN '신청'
	  	 	           WHEN 'R' THEN '반려'
	  	 	END STATUS_NAME
	  	 , RI.STATUS_TIME
	     , IFNULL(RI.EMAIL_ADDR_2, RI.EMAIL_ADDR_3) EMAIL_ADDR_2
	     , IFNULL(RI.EMAIL_ADDR_3, RI.EMAIL_ADDR_2) EMAIL_ADDR_3
	     , MI.NAME MEETINGROOM_NAME
	     , RI.TOTAL_PRICE
	     , RI.TOTAL_TIMES
	     , RESERVATION.RESERVATION_DATE 
	  	 , ( SELECT CONCAT_WS("",FILE_PATH, SAVE_FILE_NAME)
			 FROM MEETINGROOM_FILE
			 WHERE MEETINGROOM_KEY = RESERVATION.MEETINGROOM_KEY
		     AND   STATUS = 'Y'
			 LIMIT 1) AS IMAGE	  
	FROM RESERVATION_INFO AS RI
	INNER JOIN
	(SELECT RESERVATION_KEY
		   , RESERVATION_DATE
		   , MEETINGROOM_KEY
	 FROM RESERVATION_MAPP RM
	 GROUP BY RESERVATION_KEY) RESERVATION ON RESERVATION.RESERVATION_KEY = RI.RESERVATION_KEY
	INNER JOIN MEETINGROOM_INFO AS MI ON MI.MEETINGROOM_KEY = RESERVATION.MEETINGROOM_KEY
	WHERE RI.RESERVATION_KEY = #reservation_key#	
	AND   RI.NAME = #name#
	AND   RI.RESERVATION_PWD = #reservation_pwd#
	</select>
	
	<select id="getReserveTotalCount" resultClass="int">
	/* RESERVE.getReserveTotalCount */
	
	SELECT COUNT(*) AS TOTAL_COUNT
	FROM RESERVATION_INFO AS RI
	WHERE 1 = 1
	<isNotEmpty prepend="AND" property="search_column">
   		(SELECT MI.MEETINGROOM_KEY FROM MEETINGROOM_INFO MI INNER JOIN RESERVATION_MAPP AS RM ON RM.MEETINGROOM_KEY = MI.MEETINGROOM_KEY WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) = #search_column#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="search_name">
   		RI.NAME = #search_name#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="srh_smonth">
   		(SELECT RM.RESERVATION_DATE FROM RESERVATION_MAPP AS RM WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) &gt;= #srh_smonth#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="srh_emonth">
   		(SELECT RM.RESERVATION_DATE FROM RESERVATION_MAPP AS RM WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) &lt;= #srh_emonth#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="srh_state">
   		RI.STATUS = #srh_state#
   	</isNotEmpty>
	</select> 
    
    <select id="getReserveCommonList" resultClass="reserve">
	/* RESERVE.getReserveCommonList */
	
	SELECT RI.RESERVATION_KEY
	     , RI.NAME
	     , RI.FIRM_NAME
	     , RI.PHONE_NUMBER_1
	     , RI.PHONE_NUMBER_2
	     , RI.PHONE_NUMBER_3
	     , RI.EMAIL_ADDR_1
	  	 , RI.REQUEST
	  	 , RI.STATUS
	  	 , CASE STATUS WHEN 'A' THEN '승인'
	  	 	           WHEN 'W' THEN '신청'
	  	 	           WHEN 'R' THEN '반려'
	  	 	END STATUS_NAME
	  	 , RI.STATUS_TIME
	     , IFNULL(RI.EMAIL_ADDR_2, RI.EMAIL_ADDR_3) EMAIL_ADDR_2
	     , IFNULL(RI.EMAIL_ADDR_3, RI.EMAIL_ADDR_2) EMAIL_ADDR_3
	     , RI.TOTAL_PRICE
	     , RI.EVENT_NAME
	     , (SELECT NAME FROM MEETINGROOM_INFO MI INNER JOIN RESERVATION_MAPP AS RM ON RM.MEETINGROOM_KEY = MI.MEETINGROOM_KEY WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) MEETINGROOM_NAME
	     , (SELECT RESERVATION_DATE FROM RESERVATION_MAPP AS RM WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) RESERVATION_DATE
	     , (SELECT DATE_FORMAT(REG_TIME,'%Y-%m-%d') FROM RESERVATION_MAPP AS RM WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1)  REG_TIME
	FROM RESERVATION_INFO AS RI
	WHERE 1 = 1 
	<isNotEmpty prepend="AND" property="search_column">
   		(SELECT MI.MEETINGROOM_KEY FROM MEETINGROOM_INFO MI INNER JOIN RESERVATION_MAPP AS RM ON RM.MEETINGROOM_KEY = MI.MEETINGROOM_KEY WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) = #search_column#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="search_name">
   		RI.NAME = #search_name#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="srh_smonth">
   		(SELECT RM.RESERVATION_DATE FROM RESERVATION_MAPP AS RM WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) &gt;= #srh_smonth#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="srh_emonth">
   		(SELECT RM.RESERVATION_DATE FROM RESERVATION_MAPP AS RM WHERE RM.RESERVATION_KEY = RI.RESERVATION_KEY LIMIT 1) &lt;= #srh_emonth#
   	</isNotEmpty>
	<isNotEmpty prepend="AND" property="srh_state">
   		RI.STATUS = #srh_state#
   	</isNotEmpty>
	<dynamic>
		<isEqual prepend="ORDER BY" property="order_column" compareValue="1"> RI.RESERVATION_KEY </isEqual>
		<isEqual prepend="ORDER BY" property="order_column" compareValue="2"> RESERVATION_DATE </isEqual>	
	</dynamic>	
	<dynamic>
		<isEqual prepend=" " property="order_type" compareValue="A">ASC</isEqual>
		<isEqual prepend=" " property="order_type" compareValue="D">DESC</isEqual>
	</dynamic>
	LIMIT #recordRowNum# , #pageSize#
	</select>  
    
    <select id="getReserveEventList" resultClass="reserve">
	/* RESERVE.getReserveEventList */
	
	SELECT  MI.NAME MEETINGROOM_NAME
	      , RI.TOTAL_TIMES
		  , RESERVATION.RESERVATION_DATE
		  , MI.MEETINGROOM_KEY
		  , MI.COLOR
	FROM RESERVATION_INFO RI
	INNER JOIN
	(SELECT RESERVATION_KEY
		   , RESERVATION_DATE
		   , MEETINGROOM_KEY
	 FROM RESERVATION_MAPP RM
	 GROUP BY RESERVATION_KEY) RESERVATION ON RESERVATION.RESERVATION_KEY = RI.RESERVATION_KEY
	 INNER JOIN MEETINGROOM_INFO AS MI ON MI.MEETINGROOM_KEY = RESERVATION.MEETINGROOM_KEY
	 WHERE RI.STATUS IN ('A', 'W')
	</select>  
    
    <select id="getReserveCalendarList" resultClass="reserve">
	/* RESERVE.getReserveCalendarList */	
	
	SELECT *
		 , CASE A.STATUS WHEN 'A' THEN '승인'
	  	 	             WHEN 'W' THEN '신청'
	  	 	             WHEN 'R' THEN '반려' END STATUS_NAME
	FROM
	(
	SELECT COUNT(STATUS) CNT
	     , STATUS
		  , RESERVATION.RESERVATION_DATE
		  , RESERVATION.RESERVATION_YYYY
		  , RESERVATION.RESERVATION_MM
		  , RESERVATION.RESERVATION_DD
	FROM RESERVATION_INFO RI
	INNER JOIN
	(SELECT RESERVATION_KEY
		   , RESERVATION_DATE
		   , YEAR(RESERVATION_DATE) RESERVATION_YYYY
		   , MONTH(RESERVATION_DATE)-1 RESERVATION_MM
		   , DAY(RESERVATION_DATE) RESERVATION_DD
	 FROM RESERVATION_MAPP RM
	 GROUP BY RESERVATION_KEY) RESERVATION ON RESERVATION.RESERVATION_KEY = RI.RESERVATION_KEY
	 GROUP BY RESERVATION.RESERVATION_DATE, RI.STATUS
	) A
	</select>
	
	
    
    <select id="getReservationDetail" resultClass="reserve">
	/* RESERVE.getReservationDetail */
	
	SELECT MI.NAME MEETINGROOM_NAME
		  , RM.REG_TIME
		  , RI.STATUS
		  	 , CASE RI.STATUS WHEN 'A' THEN '승인'
		  	 	           WHEN 'W' THEN '신청'
		  	 	           WHEN 'R' THEN '반려'
		  	 	END STATUS_NAME
		  , CASE WHEN CHAR_LENGTH(RI.NAME) > 2 THEN CONCAT_WS("", LEFT(RI.NAME, 1), REPEAT("*", CHAR_LENGTH(RI.NAME)-2), RIGHT(RI.NAME, 1))
		  	 ELSE CONCAT_WS("", LEFT(RI.NAME, 1), REPEAT("*", CHAR_LENGTH(RI.NAME)-2)) END NAME
	
	FROM RESERVATION_MAPP RM 
	INNER JOIN MEETINGROOM_INFO AS MI ON MI.MEETINGROOM_KEY = RM.MEETINGROOM_KEY
	INNER JOIN RESERVATION_INFO AS RI ON RI.RESERVATION_KEY = RM.RESERVATION_KEY
	WHERE RM.MEETINGROOM_KEY = #meetingroom_key#
	AND   RI.TOTAL_TIMES = #total_times#
	AND   RM.RESERVATION_DATE = #reservation_date#
	LIMIT 1

	</select>
	
	<select id="reserveApproval" resultClass="reserve">
	/* RESERVE.reserveApproval */
	
	SELECT RI.RESERVATION_KEY
	     , RI.NAME
	     , RI.FIRM_NAME
	     , RI.PHONE_NUMBER_1
	     , RI.PHONE_NUMBER_2
	     , RI.PHONE_NUMBER_3
	     , RI.EMAIL_ADDR_1
	  	 , RI.REQUEST
	  	 , RI.STATUS
	  	 , RI.STATUS_TIME
	     , IFNULL(RI.EMAIL_ADDR_2, RI.EMAIL_ADDR_3) EMAIL_ADDR_2
	     , IFNULL(RI.EMAIL_ADDR_3, RI.EMAIL_ADDR_2) EMAIL_ADDR_3
	     , MI.NAME MEETINGROOM_NAME
	     , RI.TOTAL_PRICE
	     , RM.RESERVATION_DATE
	     , RM.RESERVATION_TIME	  
	     , CONCAT_WS("",RM.RESERVATION_TIME, ":00 ~ ", RM.RESERVATION_TIME+1, ":00") RESERVATION_TERM
	  	 , ( SELECT CONCAT_WS("",FILE_PATH, SAVE_FILE_NAME)
			 FROM MEETINGROOM_FILE
			 WHERE MEETINGROOM_KEY = RM.MEETINGROOM_KEY
		     AND   STATUS = 'Y'
			 LIMIT 1) AS IMAGE	  
	     , RI.EVENT_NAME
	     , RM.REG_TIME
	     , RI.TOTAL_TIMES
	FROM RESERVATION_INFO AS RI
	INNER JOIN RESERVATION_MAPP AS RM ON RM.RESERVATION_KEY = RI.RESERVATION_KEY
	INNER JOIN MEETINGROOM_INFO AS MI ON MI.MEETINGROOM_KEY = RM.MEETINGROOM_KEY
	WHERE RI.RESERVATION_KEY = #reservation_key#
	LIMIT 1
	
	</select>    
    
    <update id="reserveUpdate">
    /* MEETINGROOM.reserveUpdate */
    
    UPDATE RESERVATION_INFO SET
    	STATUS			= #status#
    ,	EVENT_NAME		= #event_name#
    ,	REQUEST			= #request#
    WHERE RESERVATION_KEY = #reservation_key#
    </update>
</sqlMap>